buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype-snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.spongepowered.org/maven'
    }
}

apply plugin: 'forge'

version = "1.8-ALPHA-0"
group = "darkevilmac.archimedesshipsplus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "archimedesshipsplus"

minecraft {
    version = "1.8-11.14.2.1427"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20150602"
}

dependencies {
    compile project(":MovingWorld")
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

idea {
    workspace {
        iws.withXml { xmlFile ->
            //Please don't kill me for my shitty groovy usage ;-;
            def runManager = xmlFile.asNode().component.find { it.@name == 'RunManager' }

            def minecraftClientDefaults = runManager.configuration.find {
                it.@name == 'Minecraft Client' && it.@type == 'Application'
            }

            def minecraftServerDefaults = runManager.configuration.find {
                it.@name == 'Minecraft Server' && it.@type == 'Application'
            }

            def minecraftClientVMArgs = '-Xincgc -Xmx1024M -Xms1024M -Dfml.coremods.load=darkevilmac.movingworld.asm.coremod.MovingWorldCoreMod -Dmixin.debug=true'
            minecraftClientDefaults.option.find { it.@name == 'VM_PARAMETERS' }.replaceNode {
                option(name: 'VM_PARAMETERS', value: minecraftClientVMArgs)
            }

            def minecraftServerVMArgs = '-Xincgc -Dfml.ignoreInvalidMinecraftCertificates=true -Dfml.coremods.load=darkevilmac.movingworld.asm.coremod.MovingWorldCoreMod -Dmixin.debug=true'
            minecraftServerDefaults.option.find { it.@name == 'VM_PARAMETERS' }.replaceNode {
                option(name: 'VM_PARAMETERS', value: minecraftServerVMArgs)
            }
        }
    }
}